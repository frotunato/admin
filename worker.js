var mongoose = require('mongoose');
var Server = require('./api/servers/models/server');
var EventEmitter = require('events').EventEmitter;
var fs = require('fs');

process.on('message', function (input) {
	console.log('MESSAGE FROM PARENT: ' + JSON.stringify(input));
	
	if (input['eventName'] === 'newWorld' && input['data']['_id'] !== undefined) {
		var directory = __dirname + "/servers/" + input['data']['_id'];
		fs.mkdir(directory, function (err) {
			if(err) {
				throw err;
			} else {
				var properties = input['data']['properties'];
				if(properties !== null) {
					var fileContent = JSON.stringify(properties, '\n')
						.replace(/"/g, '')
						.replace(/:/g, '=')
						.replace(/,/g, '\n')
						.replace(/[{}]/g, '');
					fs.writeFile(directory + '/server.properties', fileContent, function (err) {
						if (err) {
							throw err;
						} else {
							process.send( { eventName: 'newServer', created: true })
						}
					});
				} else {
					console.log('it will be generated by mcServer process');
				}
			}		
		});
	}
})


/*
mongoose.connect('mongodb://127.0.0.1:27017/Fortuna');


var ee = new EventEmitter();


function scan() {
	var queue = [];
	Server.find({}, '_id name', function (err, data) {
		if(err) {
			res.send(err);
		}
		queue = data;
		ee.emit('update', queue)
	})
}

function scanner() {
	scan();
	setTimeout(scanner, 10000);
}

function doItems() {
	if (queue.length > 0) {
		var value = queue.shift();
		console.log('DROPPED: ' + value);
	} else {
		console.log('THE QUEUE IS EMPTY');
	}
}

function start() {
	doItems();
	setTimeout(start, 1000);
	console.log('executed');
}

//start();
//scanner();

setTimeout(function(){
	scan();
},5000);

scan();

ee.on('update', function (data) {
	console.log('scanned!')
})
*/